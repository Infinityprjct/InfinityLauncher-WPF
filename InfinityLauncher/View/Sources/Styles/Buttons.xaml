<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:InfinityLauncher.View">
    

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VioletButton" TargetType="{x:Type Button}">

        <!--Background #7d49d3-->
        <Border x:Name="Border" Background="#FFBE6DBF" BorderBrush="Red" 
                BorderThickness="0" SnapsToDevicePixels="true" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" CornerRadius="{TemplateBinding Border.CornerRadius}">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="Border" Value="White"/>
                <Setter Property="Background" TargetName="Border" Value="#FFBE6DBF"/>
            </Trigger>
            <Trigger Property="Button.IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Border" Value="#5A0072"/>
            </Trigger>
            <!-- Mouse Over animation -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color" To="#6236aa" />

                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color" To="#7d49d3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <!-- Button pressed animation -->
            <EventTrigger RoutedEvent="PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color" To="#522c8f" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="PreviewMouseUp">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color" To="#7d49d3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="WhiteButton" TargetType="{x:Type Button}">

        <Border x:Name="Border" Background="Transparent" BorderBrush="White" TextBlock.Foreground="White"
                BorderThickness="3" SnapsToDevicePixels="true" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" CornerRadius="{TemplateBinding Border.CornerRadius}">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="Border" Value="White"/>
            </Trigger>
            <!-- Mouse Over animation -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color" To="White" />
                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="Black" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="Stop">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color" To="Transparent" />
                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="AccountButton" TargetType="Button">
        <Grid x:Name="Btn"  Height="50" Width="50">
            <Border>
                <Image x:Name="AccImg" Source="/View/Sources/Icons/UserUnactive.png"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="AccImg" Property="Source" Value="/View/Sources/Icons/UserActive.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ServerButton" TargetType="Button">
        <Grid Name="Btn" Height="50" Width="50">
            <Border CornerRadius="20" Panel.ZIndex="1">
                <Image Source="{DynamicResource ResourceKey=Img}"/>
            </Border>
            <Border x:Name="MouseOverBorder" Background="Gray" CornerRadius="30">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" Value="True">
                                <Setter Property="Opacity" Value="0.2"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border x:Name="IsSelectedBorder" Background="#FFBE6DBF" CornerRadius="30">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                    Mode=FindAncestor,
                                    AncestorType={x:Type Button}}, 
                                    Path=IsFocused}" Value="True">
                                <Setter Property="Opacity" Value="1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border x:Name="IsSelectedBorder2" Background="Transparent">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Setter Property="BorderThickness" Value="0,3,0,0"/>
                        <Setter Property="BorderBrush" Value="Beige"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource
                                    Mode=FindAncestor,
                                    AncestorType={x:Type Button}}, 
                                    Path=IsFocused}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>